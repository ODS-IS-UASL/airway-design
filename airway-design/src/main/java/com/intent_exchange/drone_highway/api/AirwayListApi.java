/*
 * Copyright 2025 Intent Exchange, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.intent_exchange.drone_highway.api;

import javax.annotation.Generated;
import javax.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import com.intent_exchange.drone_highway.entity.AirwayEntity;
import com.intent_exchange.drone_highway.entity.AirwayListRequestEntity;
import com.intent_exchange.drone_highway.entity.ErrorResponseEntity;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2024-12-11T11:58:41.537130600Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Validated
@Tag(name = "航路情報一覧取得", description = "the 航路情報一覧取得 API")
public interface AirwayListApi {

  /**
   * GET /airway-list : 航路情報一覧取得(ポート管理画面からのリクエスト)
   * ドローン航路システムから、地図上の指定された範囲内の航路情報の一覧を返却する。&lt;br&gt; 指定された範囲に航路情報がない場合、空の配列を返却する。
   *
   * @param point1 地図上の指定範囲の座標１（南西側） (required)
   * @param point2 地図上の指定範囲の座標２（南東側） (required)
   * @param point3 地図上の指定範囲の座標３（北東側） (required)
   * @param point4 地図上の指定範囲の座標４（北西側） (required)
   * @return 正常終了 (status code 200) or 入力チェックエラー (status code 400) or サーバーエラー (status code 500)
   */
  @Operation(operationId = "airwayListGet", summary = "航路情報一覧取得(ポート管理画面からのリクエスト)",
      description = "ドローン航路システムから、地図上の指定された範囲内の航路情報の一覧を返却する。<br> 指定された範囲に航路情報がない場合、空の配列を返却する。",
      tags = {"航路情報一覧取得"},
      responses = {
          @ApiResponse(responseCode = "200", description = "正常終了",
              content = {@Content(mediaType = "application/json",
                  schema = @Schema(implementation = AirwayEntity.class))}),
          @ApiResponse(responseCode = "400", description = "入力チェックエラー",
              content = {@Content(mediaType = "application/json",
                  schema = @Schema(implementation = ErrorResponseEntity.class))}),
          @ApiResponse(responseCode = "500", description = "サーバーエラー",
              content = {@Content(mediaType = "application/json",
                  schema = @Schema(implementation = ErrorResponseEntity.class))})})
  @RequestMapping(method = RequestMethod.GET, value = "/airway-list",
      produces = {"application/json"})

  /*
   * ResponseEntity<AirwayEntity> airwayListGet(@NotNull @Parameter(name = "point1", description =
   * "地図上の指定範囲の座標１（南西側）", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value =
   * "point1", required = true) String point1,
   * 
   * @NotNull @Parameter(name = "point2", description = "地図上の指定範囲の座標２（南東側）", required = true, in =
   * ParameterIn.QUERY) @Valid @RequestParam(value = "point2", required = true) String point2,
   * 
   * @NotNull @Parameter(name = "point3", description = "地図上の指定範囲の座標３（北東側）", required = true, in =
   * ParameterIn.QUERY) @Valid @RequestParam(value = "point3", required = true) String point3,
   * 
   * @NotNull @Parameter(name = "point4", description = "地図上の指定範囲の座標４（北西側）", required = true, in =
   * ParameterIn.QUERY) @Valid @RequestParam(value = "point4", required = true) String point4);
   */
  ResponseEntity<AirwayEntity> airwayListGet(
      @Valid AirwayListRequestEntity airwayListRequestEntity);


}

