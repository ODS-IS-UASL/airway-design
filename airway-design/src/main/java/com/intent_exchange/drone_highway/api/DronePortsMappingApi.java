/*
 * Copyright 2025 Intent Exchange, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.intent_exchange.drone_highway.api;

import javax.annotation.Generated;
import javax.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.NoHandlerFoundException;
import com.intent_exchange.drone_highway.entity.DronePortsMappingPostEntity;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen",
    date = "2025-01-29T09:19:22.536020600+09:00[Asia/Tokyo]", comments = "Generator version: 7.8.0")
@Validated
@Tag(name = "ポート情報関連付け", description = "the ポート情報関連付け API")
public interface DronePortsMappingApi {

  /**
   * POST /droneports-mapping : 航路情報とドローンポートの関連付け ドローン航路システムの航路情報とドローンポートの関連付けを行う。 航路区画単位でDELETE →
   * INSERTを行う。
   *
   * @param dronePortsMappingPostEntity (required)
   * @return 正常終了 (status code 201) or パラメータに誤りがある場合に返却する。具体的には以下のケースを想定する。
   *         ・必須指定されているパラメータが指定されていない場合 ・指定されたパラメータにバイト数の上限があり且つ、最大バイトサイズが上限を超えた場合 (status code 400)
   *         or 指定された航路ID、航路区画IDがデータベースに存在しない場合に返却する。 (status code 404) or
   *         サーバ内部にて主に以下に該当する問題が検知された場合に返却する。 ・他のサービスへのネットワークアクセスに失敗した ・サーバ内部でロジックの例外が検出された (status
   *         code 500)
   * @throws NoHandlerFoundException
   */
  @Operation(operationId = "dronePortsMappingPost", summary = "航路情報とドローンポートの関連付け",
      description = "ドローン航路システムの航路情報とドローンポートの関連付けを行う。  航路区画単位でDELETE → INSERTを行う。 ",
      tags = {"ポート情報関連付け"},
      responses = {@ApiResponse(responseCode = "201", description = "正常終了"), @ApiResponse(
          responseCode = "400",
          description = "パラメータに誤りがある場合に返却する。具体的には以下のケースを想定する。  ・必須指定されているパラメータが指定されていない場合  ・指定されたパラメータにバイト数の上限があり且つ、最大バイトサイズが上限を超えた場合   "),
          @ApiResponse(responseCode = "404",
              description = "指定された航路ID、航路区画IDがデータベースに存在しない場合に返却する。 "),
          @ApiResponse(responseCode = "500",
              description = "サーバ内部にて主に以下に該当する問題が検知された場合に返却する。  ・他のサービスへのネットワークアクセスに失敗した  ・サーバ内部でロジックの例外が検出された ")})
  @RequestMapping(method = RequestMethod.POST, value = "/droneports-mapping",
      consumes = {"application/json"})

  ResponseEntity<Void> dronePortsMappingPost(@Parameter(name = "DronePortsMappingPostEntity",
      description = "",
      required = true) @Valid @RequestBody DronePortsMappingPostEntity dronePortsMappingPostEntity)
      throws NoHandlerFoundException;

}

