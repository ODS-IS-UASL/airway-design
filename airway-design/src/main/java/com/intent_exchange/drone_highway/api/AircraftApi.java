/*
 * Copyright 2025 Intent Exchange, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.intent_exchange.drone_highway.api;

import com.intent_exchange.drone_highway.entity.AircraftEntity;
import com.intent_exchange.drone_highway.entity.ErrorResponseEntity;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-12-20T03:01:20.159616200Z[Etc/UTC]", comments = "Generator version: 7.8.0")
@Validated
@Tag(name = "Aircraft", description = "機体情報候補リストの取得(A-1-2-8-2)のコントローラクラス。")
public interface AircraftApi {

    /**
     * GET /aircraft : 機体情報候補リスト取得
     * 航路を使用可能な機体として選択可能な機体候補リストを返却する。
     *
     * @return 取得成功 (status code 200)
     *         or サーバーエラー (status code 500)
     */
    @Operation(
        operationId = "getAircraft",
        summary = "機体情報候補リスト取得",
        description = "航路を使用可能な機体として選択可能な機体候補リストを返却する。",
        tags = { "Aircraft" },
        responses = {
            @ApiResponse(responseCode = "200", description = "取得成功", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AircraftEntity.class))
            }),
            @ApiResponse(responseCode = "500", description = "サーバーエラー", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponseEntity.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/aircraft",
        produces = { "application/json" }
    )
    
    ResponseEntity<AircraftEntity> getAircraft(
        
    );

}

