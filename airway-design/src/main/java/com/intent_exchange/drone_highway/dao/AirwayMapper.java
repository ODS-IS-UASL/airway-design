/*
 * Copyright 2025 Intent Exchange, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
 * associated documentation files (the "Software"), to deal in the Software without restriction,
 * including without limitation the rights to use, copy, modify, merge, publish, distribute,
 * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
 * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.intent_exchange.drone_highway.dao;

import java.time.LocalDateTime;
import java.util.List;
import org.apache.ibatis.annotations.Mapper;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import com.intent_exchange.drone_highway.model.Airway;

@Mapper
@Repository
public interface AirwayMapper {
  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * airway
   *
   * @mbg.generated
   */
  int deleteByPrimaryKey(String airwayId);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * airway
   *
   * @mbg.generated
   */
  int insert(Airway row);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * airway
   *
   * @mbg.generated
   */
  int insertSelective(Airway row);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * airway
   *
   * @mbg.generated
   */
  Airway selectByPrimaryKey(String airwayId);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * airway
   *
   * @mbg.generated
   */
  int updateByPrimaryKeySelective(Airway row);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * airway
   *
   * @mbg.generated
   */
  int updateByPrimaryKey(Airway row);

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * airway
   *
   * @mbg.generated
   */
  List<Airway> selectAll();

  /**
   * オプション検索機能。条件に基づいて航路情報を取得します。
   * 
   * @param flightPurpose 飛行目的(複数指定可能)
   * @param determinationDateFrom 画定履歴の開始日
   * @param determinationDateTo 画定履歴の終了日
   * @param businessNumber 事業者番号
   * @param areaName エリア名
   * @return 条件に一致するAirwayエンティティのリスト。該当するデータがない場合は空のリスト。
   */
  List<Airway> selectWithFilters(@Param("flightPurpose") List<String> flightPurpose,
      @Param("determinationDateFrom") LocalDateTime determinationDateFrom,
      @Param("determinationDateTo") LocalDateTime determinationDateTo,
      @Param("businessNumber") String businessNumber, @Param("areaName") String areaName);

  /**
   * 引数に関連するデータの件数を取得する
   * 
   * @param airwayDeterminationIds 航路画定ID
   * @return 検索条件に一致した件数
   */
  int selectCountByAirwayDeterminationId(
      @Param("airwayDeterminationIds") List<Integer> airwayDeterminationIds);
}

