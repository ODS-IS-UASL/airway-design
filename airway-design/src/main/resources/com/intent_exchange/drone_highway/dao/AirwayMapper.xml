<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.intent_exchange.drone_highway.dao.AirwayMapper">
  <resultMap id="BaseResultMap" type="com.intent_exchange.drone_highway.model.Airway">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="airway_id" jdbcType="VARCHAR" property="airwayId" />
    <result column="airway_determination_id" jdbcType="INTEGER" property="airwayDeterminationId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_node_airway_id" jdbcType="VARCHAR" property="parentNodeAirwayId" />
    <result column="flight_purpose" jdbcType="VARCHAR" property="flightPurpose" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    airway_id, airway_determination_id, name, parent_node_airway_id, flight_purpose, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from airway
    where airway_id = #{airwayId,jdbcType=VARCHAR}
    AND EXISTS(<include refid="selectAirwayDetermination" />)
  </select>
  <insert id="insert" parameterType="com.intent_exchange.drone_highway.model.Airway">
    insert into airway
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="airwayId != null">
        airway_id,
      </if>
      <if test="airwayDeterminationId != null">
        airway_determination_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentNodeAirwayId != null">
        parent_node_airway_id,
      </if>
      <if test="airwayOperatorId != null">
        airway_operator_id,
      </if>
      <if test="flightPurpose != null">
        flight_purpose,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="airwayId != null">
        #{airwayId,jdbcType=VARCHAR},
      </if>
      <if test="airwayDeterminationId != null">
        #{airwayDeterminationId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentNodeAirwayId != null">
        #{parentNodeAirwayId,jdbcType=VARCHAR},
      </if>
      <if test="airwayOperatorId != null">
        #{airwayOperatorId,jdbcType=VARCHAR},
      </if>
      <if test="flightPurpose != null">
        #{flightPurpose,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="selectAll" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from airway
    WHERE
      EXISTS(<include refid="selectAirwayDetermination" />)
    order by airway_id
  </select>
  
  <sql id="selectAirwayDetermination">
    SELECT
      *
    FROM
      airway_determination
    WHERE
      airway_determination.airway_determination_id = airway.airway_determination_id
    AND airway_determination.delete IS NOT TRUE 
  </sql>
  
  <select id="selectWithFilters" parameterType="map" resultMap="BaseResultMap">
    select
    airway.airway_id,
    airway.airway_determination_id,
    airway.name,
    airway.parent_node_airway_id,
    airway.flight_purpose,
    airway.created_at,
    airway.updated_at
    from airway
    inner join airway_determination on airway.airway_determination_id = airway_determination.airway_determination_id
    inner join fall_tolerance_range on airway_determination.fall_tolerance_range_id = fall_tolerance_range.fall_tolerance_range_id
    where 1=1
    and airway_determination.delete IS NOT TRUE
    <if test="flightPurpose != null">
      <if test="!flightPurpose.isEmpty()">
        and airway.flight_purpose in
        <foreach item="item" index="index" collection="flightPurpose" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </if>
    <if test="determinationDateFrom != null">
      and airway_determination.updated_at &gt;= #{determinationDateFrom}
    </if>
    <if test="determinationDateTo != null">
      and airway_determination.updated_at &lt;= #{determinationDateTo}
    </if>
    <if test="businessNumber != null">
      and airway_determination.business_number = #{businessNumber}
    </if>
    <if test="areaName != null">
      and fall_tolerance_range.area_name = #{areaName}
    </if>
    order by airway.airway_id
  </select>

  <select id="selectCountByAirwayDeterminationId" parameterType="java.util.List" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM
      airway
    WHERE
      airway_determination_id IN
      <foreach item="airwayDeterminationId" collection="airwayDeterminationIds" open="(" separator="," close=")">
        #{airwayDeterminationId}
      </foreach>
  </select>
</mapper>
